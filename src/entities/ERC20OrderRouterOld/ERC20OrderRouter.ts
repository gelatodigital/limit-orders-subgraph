// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class DepositToken extends EthereumEvent {
  get params(): DepositToken__Params {
    return new DepositToken__Params(this);
  }
}

export class DepositToken__Params {
  _event: DepositToken;

  constructor(event: DepositToken) {
    this._event = event;
  }

  get key(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get module(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get inputToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get witness(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get secret(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }
}

export class ERC20OrderRouter extends SmartContract {
  static bind(address: Address): ERC20OrderRouter {
    return new ERC20OrderRouter("ERC20OrderRouter", address);
  }

  gelatoPineCore(): Address {
    let result = super.call("gelatoPineCore", []);

    return result[0].toAddress();
  }

  try_gelatoPineCore(): CallResult<Address> {
    let result = super.tryCall("gelatoPineCore", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _gelatoPineCore(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositTokenCall extends EthereumCall {
  get inputs(): DepositTokenCall__Inputs {
    return new DepositTokenCall__Inputs(this);
  }

  get outputs(): DepositTokenCall__Outputs {
    return new DepositTokenCall__Outputs(this);
  }
}

export class DepositTokenCall__Inputs {
  _call: DepositTokenCall;

  constructor(call: DepositTokenCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _module(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _inputToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _witness(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _secret(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class DepositTokenCall__Outputs {
  _call: DepositTokenCall;

  constructor(call: DepositTokenCall) {
    this._call = call;
  }
}
