specVersion: 0.0.2
description: Gelato Limit Orders Subgraph
repository: https://github.com/gelatodigital/limit-orders-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ERC20
    network: {{network}}
    source:
      abi: ERC20
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: GelatoPineCore
          file: ./abis/GelatoPineCore.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleERC20Transfer
      file: ./src/handlers/ERC20.ts

  - kind: ethereum/contract
    name: ERC20OrderRouter
    network: {{network}}
    source:
      abi: ERC20OrderRouter
      startBlock: {{startBlock}}
      address: "{{erc20OrderRouterAddress}}"
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: ERC20OrderRouter
          file: ./abis/ERC20OrderRouter.json
      eventHandlers:
        - event: DepositToken(indexed bytes32,indexed address,uint256,address,address,indexed address,address,bytes,bytes32)
          handler: handleDepositToken
      file: ./src/handlers/Order.ts

  - kind: ethereum/contract
    name: GelatoPineCore
    network: {{network}}
    source:
      abi: GelatoPineCore
      startBlock: {{startBlock}}
      address: "{{gelatoPineCoreAddress}}"
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: GelatoPineCore
          file: ./abis/GelatoPineCore.json
      eventHandlers:
        - event: DepositETH(indexed bytes32,indexed address,uint256,bytes)
          handler: handleETHOrderCreated
        - event: OrderExecuted(indexed bytes32,address,address,address,bytes,bytes,uint256,uint256)
          handler: handleOrderExecuted
        - event: OrderCancelled(indexed bytes32,address,address,address,bytes,uint256)
          handler: handleOrderCancelled
      file: ./src/handlers/Order.ts
